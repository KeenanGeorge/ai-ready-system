name: CI

on:
  push:
    branches: [ main, features ]
  pull_request:
    branches: [ main, features ]

env:
  GO_VERSION: '1.22'
  TESTMO_SOURCE: 'go-ci'

jobs:
  test:
    name: Run Tests and Upload to Testmo
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for commit info

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install gotestsum
      run: go install gotest.tools/gotestsum@latest

    - name: Install Testmo CLI
      run: npm install -g @testmo/testmo-cli

    - name: Create reports directory
      run: mkdir -p reports

    - name: Run tests with coverage and generate JUnit report
      run: |
        gotestsum --format=standard-verbose \
          --junitfile=reports/unit-tests.xml \
          --jsonfile=reports/test-results.json \
          -- ./... -coverprofile=coverage.out -covermode=atomic

    - name: Generate coverage report
      run: |
        go tool cover -html=coverage.out -o reports/coverage.html
        go tool cover -func=coverage.out > reports/coverage.txt

    - name: Get commit info
      id: commit
      run: |
        echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
        echo "message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT

    - name: Create Testmo run
      id: testmo
      run: |
        # Try to create Testmo run with proper error handling
        RUN_ID=$(testmo automation run create \
          --name "CI: ${{ steps.commit.outputs.branch }} - ${{ steps.commit.outputs.sha }}" \
          --source "${{ env.TESTMO_SOURCE }}" \
          --milestone "CI Automation" \
          --config "Go ${{ env.GO_VERSION }}" 2>&1) || {
          echo "Failed to create Testmo run: $RUN_ID"
          echo "run_id=failed" >> $GITHUB_OUTPUT
          exit 1
        }
        echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
        echo "Successfully created Testmo run: $RUN_ID"

    - name: Submit test results to Testmo
      if: steps.testmo.outputs.run_id != 'failed'
      run: |
        testmo automation run submit \
          --run-id "${{ steps.testmo.outputs.run_id }}" \
          --results reports/unit-tests.xml \
          --coverage reports/coverage.txt || {
          echo "Failed to submit test results to Testmo"
          exit 1
        }
        echo "Successfully submitted test results to Testmo"

    - name: Complete Testmo run
      if: steps.testmo.outputs.run_id != 'failed'
      run: |
        testmo automation run complete --run-id "${{ steps.testmo.outputs.run_id }}" || {
          echo "Failed to complete Testmo run"
          exit 1
        }
        echo "Successfully completed Testmo run"

    - name: Comment on PR with Testmo link
      if: github.event_name == 'pull_request' && steps.testmo.outputs.run_id != 'failed'
      uses: actions/github-script@v7
      with:
        script: |
          const testmoUrl = `https://app.testmo.com/automation/runs/${{ steps.testmo.outputs.run_id }}`;
          const comment = `## 🧪 Test Results Uploaded to Testmo
          
          ✅ **CI Status**: Tests passed successfully
          
          📊 **Testmo Run**: [View Results](${testmoUrl})
          
          📈 **Coverage**: Generated and uploaded
          
          🔗 **Run ID**: \`${{ steps.testmo.outputs.run_id }}\`
          
          ---
          *This comment was automatically generated by the CI pipeline*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Comment on PR with Testmo failure
      if: github.event_name == 'pull_request' && steps.testmo.outputs.run_id == 'failed'
      uses: actions/github-script@v7
      with:
        script: |
          const comment = `## ⚠️ Testmo Integration Failed
          
          ❌ **CI Status**: Tests passed but Testmo integration failed
          
          🔧 **Issue**: Unable to create Testmo automation run
          
          📋 **Next Steps**: 
          - Check Testmo CLI installation
          - Verify Testmo credentials
          - Review Testmo CLI syntax
          
          ---
          *This comment was automatically generated by the CI pipeline*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          reports/
          coverage.out
        retention-days: 30

    - name: Check test coverage threshold
      run: |
        COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
        echo "Total coverage: ${COVERAGE}%"
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "Coverage below 80% threshold: ${COVERAGE}%"
          exit 1
        fi
        echo "Coverage threshold met: ${COVERAGE}%"
